-- MySQL Script generated by MySQL Workbench
-- Sáb 19 Nov 2016 17:13:16 BRST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
SHOW WARNINGS;
USE `mydb` ;

-- -----------------------------------------------------
-- Schema BDODONTO
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `BDODONTOSYSTEM` ;

-- -----------------------------------------------------
-- Schema BDODONTO
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `BDODONTOSYSTEM` DEFAULT CHARACTER SET utf8 ;
SHOW WARNINGS;
USE `BDODONTOSYSTEM` ;

-- -----------------------------------------------------
-- Table `FUNCIONARIO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FUNCIONARIO` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `FUNCIONARIO` (
  `FUN_CODIGO` INT NOT NULL,
  `FUN_APELIDO` VARCHAR(10) NULL,
  `FUN_MATRICULA` VARCHAR(10) NULL,
  `FUN_ATIVO` BIT NOT NULL,
  `FUN_CADASTRO` TIMESTAMP NULL,
  `FUN_ATUALIZACAO` TIMESTAMP NULL,
  PRIMARY KEY (`FUN_CODIGO`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ODONTOLOGISTA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ODONTOLOGISTA` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `ODONTOLOGISTA` (
  `MED_CODIGO` INT NOT NULL,
  `MED_CRO` CHAR(15) NOT NULL,
  `MED_CADASTRO` TIMESTAMP NULL,
  `MED_ATUALIZACAO` TIMESTAMP NULL,
  `FUNCIONARIO_FUN_CODIGO` INT NOT NULL,
  PRIMARY KEY (`MED_CODIGO`),
  CONSTRAINT `fk_ODONTOLOGISTA_FUNCIONARIO1`
    FOREIGN KEY (`FUNCIONARIO_FUN_CODIGO`)
    REFERENCES `FUNCIONARIO` (`FUN_CODIGO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `AGENDA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AGENDA` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `AGENDA` (
  `AG_CODIGO` INT NOT NULL,
  `AG_DATA` DATE NOT NULL,
  `AG_HORA` TIME NOT NULL,
  `AG_AGENDADO` BIT NULL COMMENT 'Campo criado para determinar se nesse dia e horário o médico possui algum paciente agendado.',
  `AG_CADASTRO` DATETIME NULL,
  `AG_ATUALIZACAO` DATETIME NULL,
  `PACIENTE_PAC_CODIGO` INT NOT NULL,
  `ODONTOLOGISTA_MED_CODIGO` INT NOT NULL,
  PRIMARY KEY (`AG_CODIGO`),
  CONSTRAINT `fk_AGENDA_PACIENTE1`
    FOREIGN KEY (`PACIENTE_PAC_CODIGO`)
    REFERENCES `PACIENTE` (`PAC_CODIGO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_AGENDA_ODONTOLOGISTA1`
    FOREIGN KEY (`ODONTOLOGISTA_MED_CODIGO`)
    REFERENCES `ODONTOLOGISTA` (`MED_CODIGO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `RECEPCIONISTA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RECEPCIONISTA` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `RECEPCIONISTA` (
  `REC_CODIGO` INT NOT NULL,
  `FUNCIONARIO_FUN_CODIGO` INT NOT NULL,
  `AGENDA_AG_CODIGO` INT NOT NULL,
  PRIMARY KEY (`REC_CODIGO`),
  CONSTRAINT `fk_RECEPCIONISTA_FUNCIONARIO1`
    FOREIGN KEY (`FUNCIONARIO_FUN_CODIGO`)
    REFERENCES `FUNCIONARIO` (`FUN_CODIGO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_RECEPCIONISTA_AGENDA1`
    FOREIGN KEY (`AGENDA_AG_CODIGO`)
    REFERENCES `AGENDA` (`AG_CODIGO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `PACIENTE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PACIENTE` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `PACIENTE` (
  `PAC_CODIGO` INT NOT NULL,
  `PAC_ATIVO` BIT NOT NULL,
  `PAC_CADASTRO` TIMESTAMP NULL,
  `PAC_ATUALIZACAO` TIMESTAMP NULL,
  `RECEPCIONISTA_REC_CODIGO` INT NOT NULL,
  PRIMARY KEY (`PAC_CODIGO`),
  CONSTRAINT `fk_PACIENTE_RECEPCIONISTA1`
    FOREIGN KEY (`RECEPCIONISTA_REC_CODIGO`)
    REFERENCES `RECEPCIONISTA` (`REC_CODIGO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `USUARIO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `USUARIO` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `USUARIO` (
  `US_CODIGO` INT NOT NULL,
  `US_NOME` VARCHAR(45) NOT NULL,
  `US_SENHA` VARCHAR(45) NOT NULL,
  `US_NIVEL` INT NOT NULL COMMENT 'Não será implementado nesse primeiro momento\nSerá o nivel de acesso que cada usuario vai ter sobre o sistema\nA ideia inicial é criar uma outra tabela com o id do nivel e a descrição de cada um\n',
  `US_ATIVO` BIT NULL,
  `US_CADASTRO` TIMESTAMP NULL,
  `US_ATUALIZACAO` TIMESTAMP NULL,
  `FUNCIONARIO_FUN_CODIGO` INT NOT NULL,
  PRIMARY KEY (`US_CODIGO`, `FUNCIONARIO_FUN_CODIGO`),
  CONSTRAINT `fk_USUARIO_FUNCIONARIO1`
    FOREIGN KEY (`FUNCIONARIO_FUN_CODIGO`)
    REFERENCES `FUNCIONARIO` (`FUN_CODIGO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `PESSOA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PESSOA` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `PESSOA` (
  `PES_CODIGO` INT NOT NULL,
  `PES_CPF` VARCHAR(11) NULL,
  `PES_IDENTIDADE` VARCHAR(9) NULL,
  `PES_NOME` VARCHAR(80) NULL,
  `PES_NASCIMENTO` VARCHAR(10) NULL,
  `PES_SEXO` ENUM('F', 'M') NULL,
  `PES_EMAIL` VARCHAR(45) NULL,
  `PES_DDD` CHAR(2) NULL,
  `PES_CEL` VARCHAR(9) NULL,
  `PES_TEL` VARCHAR(8) NULL,
  `PACIENTE_PAC_CODIGO` INT NOT NULL,
  `USUARIO_US_CODIGO` INT NOT NULL,
  PRIMARY KEY (`PES_CODIGO`, `PACIENTE_PAC_CODIGO`, `USUARIO_US_CODIGO`),
  CONSTRAINT `fk_Pessoa_PACIENTE1`
    FOREIGN KEY (`PACIENTE_PAC_CODIGO`)
    REFERENCES `PACIENTE` (`PAC_CODIGO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pessoa_USUARIO1`
    FOREIGN KEY (`USUARIO_US_CODIGO`)
    REFERENCES `USUARIO` (`US_CODIGO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ENDERECO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ENDERECO` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `ENDERECO` (
  `END_CODIGO` INT NOT NULL,
  `END_CEP` VARCHAR(8) NULL,
  `END_LUGADOURO` VARCHAR(80) NULL,
  `END_NUMERO` VARCHAR(6) NULL,
  `END_COMPLEMENTO` VARCHAR(30) NULL,
  `END_BAIRRO` VARCHAR(30) NULL,
  `END_CIDADE` VARCHAR(30) NULL,
  `END_UF` VARCHAR(3) NULL,
  `END_PAIS` VARCHAR(20) NULL,
  `END_ATIVO` BIT NOT NULL DEFAULT 'S' OR 'N',
  `END_CADASTRO` TIMESTAMP NULL,
  `END_ATUALIZACAO` TIMESTAMP NULL,
  `PESSOA_PES_CODIGO` INT NOT NULL,
  PRIMARY KEY (`END_CODIGO`, `PESSOA_PES_CODIGO`),
  CONSTRAINT `fk_ENDERECO_PESSOA1`
    FOREIGN KEY (`PESSOA_PES_CODIGO`)
    REFERENCES `PESSOA` (`PES_CODIGO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `TRATAMENTO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TRATAMENTO` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `TRATAMENTO` (
  `TRA_CODIGO` INT NOT NULL,
  `TRA_DESCRICAO` VARCHAR(100) NOT NULL,
  `PACIENTE_PAC_CODIGO` INT NOT NULL,
  PRIMARY KEY (`TRA_CODIGO`),
  CONSTRAINT `fk_TRATAMENTO_PACIENTE1`
    FOREIGN KEY (`PACIENTE_PAC_CODIGO`)
    REFERENCES `PACIENTE` (`PAC_CODIGO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `CONSULTA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CONSULTA` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `CONSULTA` (
  `CON_CODIGO` INT NOT NULL,
  `CON_CONFIRMADO` BIT NULL,
  `CON_CADASTRO` TIMESTAMP NULL,
  `CON_ATUALIZACAO` TIMESTAMP NULL,
  `PACIENTE_PAC_CODIGO` INT NOT NULL,
  `ODONTOLOGISTA_MED_CODIGO` INT NOT NULL,
  PRIMARY KEY (`CON_CODIGO`, `ODONTOLOGISTA_MED_CODIGO`),
  CONSTRAINT `fk_CONSULTA_PACIENTE1`
    FOREIGN KEY (`PACIENTE_PAC_CODIGO`)
    REFERENCES `PACIENTE` (`PAC_CODIGO`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_CONSULTA_ODONTOLOGISTA1`
    FOREIGN KEY (`ODONTOLOGISTA_MED_CODIGO`)
    REFERENCES `ODONTOLOGISTA` (`MED_CODIGO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `HISTORICO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `HISTORICO` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `HISTORICO` (
  `HIS_CODIGO` INT NOT NULL,
  `HIS_DESCRICAO` VARCHAR(100) NULL,
  `HIS_DATA` DATE NULL,
  `HIS_HORA` TIME NULL,
  `CONSULTA_CON_CODIGO` INT NOT NULL,
  PRIMARY KEY (`HIS_CODIGO`, `CONSULTA_CON_CODIGO`),
  CONSTRAINT `fk_HISTORICO_CONSULTA1`
    FOREIGN KEY (`CONSULTA_CON_CODIGO`)
    REFERENCES `CONSULTA` (`CON_CODIGO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `EXAME`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EXAME` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `EXAME` (
  `EX_CODIGO` INT NOT NULL,
  `EX_DATA` DATE NOT NULL,
  `EX_HORA` TIME NOT NULL,
  `EX_TIPO` VARCHAR(50) NOT NULL,
  `PACIENTE_PAC_CODIGO` INT NOT NULL,
  PRIMARY KEY (`EX_CODIGO`),
  CONSTRAINT `fk_EXAME_PACIENTE1`
    FOREIGN KEY (`PACIENTE_PAC_CODIGO`)
    REFERENCES `PACIENTE` (`PAC_CODIGO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `PLANO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PLANO` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `PLANO` (
  `PL_CODIGO` INT NOT NULL,
  `PL_CONVENIO` VARCHAR(45) NULL,
  PRIMARY KEY (`PL_CODIGO`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `CONVENIADO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CONVENIADO` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `CONVENIADO` (
  `CON_CODIGO` INT NOT NULL,
  `CON_NUMERO` VARCHAR(30) NULL,
  `CON_NATUREZA` VARCHAR(11) NULL,
  `CON_ACOMODACAO` VARCHAR(45) NULL,
  `CON_VALIDADE` DATE NULL,
  `CON_ABRANGENCIA` VARCHAR(45) NULL,
  `CON_COBERTURA` VARCHAR(45) NULL,
  `CON_OBSERVACAO` VARCHAR(100) NULL,
  `PLANO_PL_CODIGO` INT NOT NULL,
  `PACIENTE_PAC_CODIGO` INT NOT NULL,
  PRIMARY KEY (`CON_CODIGO`, `PLANO_PL_CODIGO`),
  CONSTRAINT `fk_CONVENIO_PLANO1`
    FOREIGN KEY (`PLANO_PL_CODIGO`)
    REFERENCES `PLANO` (`PL_CODIGO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CONVENIO_PACIENTE1`
    FOREIGN KEY (`PACIENTE_PAC_CODIGO`)
    REFERENCES `PACIENTE` (`PAC_CODIGO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `DENTE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DENTE` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `DENTE` (
  `DEN_CODIGO` INT NOT NULL,
  `DEN_DESCRICAO` VARCHAR(45) NULL,
  `DEN_NUMERO` TINYINT NULL,
  `DEN_RAIOX` VARCHAR(80) NULL,
  `PACIENTE_PAC_CODIGO` INT NOT NULL,
  PRIMARY KEY (`DEN_CODIGO`),
  CONSTRAINT `fk_ARCADA_PACIENTE1`
    FOREIGN KEY (`PACIENTE_PAC_CODIGO`)
    REFERENCES `PACIENTE` (`PAC_CODIGO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `PAGAMENTO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PAGAMENTO` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `PAGAMENTO` (
  `PAG_CODIGO` INT NOT NULL,
  `PAG_FORMA` VARCHAR(45) NULL,
  `PAG_VALOR` VARCHAR(45) NULL,
  `PACIENTE_PAC_CODIGO` INT NOT NULL,
  PRIMARY KEY (`PAG_CODIGO`),
  CONSTRAINT `fk_PAGAMENTO_PACIENTE1`
    FOREIGN KEY (`PACIENTE_PAC_CODIGO`)
    REFERENCES `PACIENTE` (`PAC_CODIGO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `GERENTE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GERENTE` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `GERENTE` (
  `GER_CODIGO` INT NOT NULL,
  `FUNCIONARIO_FUN_CODIGO` INT NOT NULL,
  PRIMARY KEY (`GER_CODIGO`),
  CONSTRAINT `fk_GERENTE_FUNCIONARIO1`
    FOREIGN KEY (`FUNCIONARIO_FUN_CODIGO`)
    REFERENCES `FUNCIONARIO` (`FUN_CODIGO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
Contact GitHub API Training Shop Blog About
© 2016 GitHub, Inc. Terms Privacy Security Status Help